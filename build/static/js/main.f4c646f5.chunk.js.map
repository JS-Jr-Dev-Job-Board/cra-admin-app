{"version":3,"sources":["components/Signin/StyledSignin.js","components/Signin/Signin.js","components/Profile.js","components/EndpointPage/PotentialJob/PotentialJob.js","components/EndpointPage/EndpointPage.js","components/Dashboard/axios.js","components/Dashboard/DashboardCard.js","components/Dashboard/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["StyledSignin","styled","form","initState","email","password","Signin","props","useState","setForm","changeHandler","e","target","id","value","onSubmit","preventDefault","htmlFor","placeholder","type","onChange","Profile","useAuth0","user","isAuthenticated","src","picture","alt","name","PotentialJob","data","company","salary","description","source","title","className","href","dummydata","EndpointPage","selectedListings","setSelectedListings","selectedJobHandler","checked","newArray","filter","item","potentialJobs","map","job","onClick","alert","join","disabled","length","instance","axios","create","baseURL","jobState","Jobs","DashboardCard","setJob","useEffect","get","then","res","catch","err","Object","keys","key","jobs","i","companyName","position","location","applyUrl","Dashboard","App","to","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","require","config","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4c646f5.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst StyledSignin = styled.form`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  button {\r\n    padding: 6px;\r\n  }\r\n`;\r\nexport default StyledSignin;\r\n","import React, { useState } from \"react\";\r\nimport StyledSignin from \"./StyledSignin\";\r\n\r\nconst initState = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst Signin = (props) => {\r\n  const [form, setForm] = useState(initState);\r\n\r\n  const changeHandler = (e) => {\r\n    setForm({ ...form, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    setForm(initState)\r\n  };\r\n\r\n  return (\r\n    <StyledSignin onSubmit={submitHandler}>\r\n      <label htmlFor=\"email\">\r\n        email:{\" \"}\r\n        <input\r\n          placeholder=\"email\"\r\n          id=\"email\"\r\n          type=\"text\"\r\n          value={form.email}\r\n          onChange={changeHandler}\r\n        />\r\n      </label>\r\n      <label htmlFor=\"password\">\r\n        password:{\" \"}\r\n        <input\r\n          placeholder=\"password\"\r\n          id=\"password\"\r\n          type=\"text\"\r\n          value={form.password}\r\n          onChange={changeHandler}\r\n        />\r\n      </label>\r\n\r\n      <button>Signin</button>\r\n    </StyledSignin>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import React from 'react'\r\nimport { useAuth0 } from '@auth0/auth0-react'\r\n\r\n\r\nconst Profile = () => {\r\n    const { user, isAuthenticated } = useAuth0()\r\n\r\n    return (\r\n        isAuthenticated && (\r\n            <div>\r\n                <img src={user.picture} alt={user.name} />\r\n                <h2>{user.name}</h2>\r\n                <p>{user.email}</p>\r\n            </div>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react';\r\n\r\nconst PotentialJob = props => {\r\n  const {company, salary, description, source, title} = props.data;\r\n\r\n  return(\r\n    <div className='PotentialJobCard'>\r\n      <p><u>Company</u>: {company}</p>\r\n      <p><u>Job Title</u>: {title}</p>\r\n      <p><u>Link to Listing</u>: <a href={`https://www.${source}`}>{source}</a></p>\r\n      <p><u>Salary</u>: {salary}</p>\r\n      <p><u>Description</u>: {description}</p>\r\n      <input type=\"checkbox\" name=\"approved\" id={props.id} onChange={props.onChange} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PotentialJob;\r\n","import React, { useState } from \"react\";\r\nimport PotentialJob from \"./PotentialJob/PotentialJob\";\r\n\r\nconst dummydata = [\r\n  {\r\n    company: \"a\",\r\n    salary: \"$44,444\",\r\n    source: \"github.com/listing1\",\r\n    description:\r\n      \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quod explicabo officiis corporis minus totam commodi, id debitis neque consequuntur alias repudiandae distinctio nihil iure quae a laboriosam labore obcaecati dolore vel. Asperiores facilis amet ad incidunt iste laudantium delectus itaque inventore sed voluptates similique est cumque ex reprehenderit, dolor magnam excepturi. Nobis voluptatum harum iure.\",\r\n    id: 12,\r\n    title: \"Jr. JavaScript Developer\",\r\n  },\r\n  {\r\n    company: \"b\",\r\n    salary: \"$55,555\",\r\n    source: \"github.com/listing2\",\r\n    description:\r\n      \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quod explicabo officiis corporis minus totam commodi, id debitis neque consequuntur alias repudiandae distinctio nihil iure quae a laboriosam labore obcaecati dolore vel. Asperiores facilis amet ad incidunt iste laudantium delectus itaque inventore sed voluptates similique est cumque ex reprehenderit, dolor magnam excepturi. Nobis voluptatum harum iure.\",\r\n    id: 23,\r\n    title: \"Jr. JavaScript Developer\",\r\n  },\r\n  {\r\n    company: \"c\",\r\n    salary: \"$66,666\",\r\n    source: \"github.com/listing3\",\r\n    description:\r\n      \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quod explicabo officiis corporis minus totam commodi, id debitis neque consequuntur alias repudiandae distinctio nihil iure quae a laboriosam labore obcaecati dolore vel. Asperiores facilis amet ad incidunt iste laudantium delectus itaque inventore sed voluptates similique est cumque ex reprehenderit, dolor magnam excepturi. Nobis voluptatum harum iure.\",\r\n    id: 34,\r\n    title: \"Jr. JavaScript Developer\",\r\n  },\r\n  {\r\n    company: \"d\",\r\n    salary: \"$77,777\",\r\n    source: \"github.co/listing4\",\r\n    description:\r\n      \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quod explicabo officiis corporis minus totam commodi, id debitis neque consequuntur alias repudiandae distinctio nihil iure quae a laboriosam labore obcaecati dolore vel. Asperiores facilis amet ad incidunt iste laudantium delectus itaque inventore sed voluptates similique est cumque ex reprehenderit, dolor magnam excepturi. Nobis voluptatum harum iure.\",\r\n    id: 45,\r\n    title: \"Jr. JavaScript Developer\",\r\n  },\r\n];\r\n\r\nconst EndpointPage = (props) => {\r\n  const [selectedListings, setSelectedListings] = useState([]);\r\n\r\n  const selectedJobHandler = (e) => {\r\n    if (e.target.checked === true) {\r\n      setSelectedListings([...selectedListings, e.target.id]);\r\n    } else {\r\n      const newArray = selectedListings.filter((item) => item !== e.target.id);\r\n      setSelectedListings([...newArray]);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    alert(\r\n      `You have added the following jobs: ${selectedListings.join(\", \")}`\r\n    );\r\n  };\r\n\r\n  const potentialJobs = dummydata.map((job) => {\r\n    return (\r\n      <PotentialJob\r\n        data={job}\r\n        key={job.id}\r\n        id={job.id}\r\n        onChange={selectedJobHandler}\r\n      />\r\n    );\r\n  });\r\n\r\n  const fireHandler = () => {\r\n    alert(\"scraping, crawling, and calling the internet, be right back!\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"EndpointPageTop\">\r\n        <h1>GitHub</h1> {/*props.site*/}\r\n        <button className=\"EndpointPageFireBtn\" onClick={fireHandler}>\r\n          FIRE AWAY! (trigger scrape/api call)\r\n        </button>\r\n      </div>\r\n      <form className=\"EndpointPagePotentialListings\" onSubmit={submitHandler}>\r\n        {potentialJobs}\r\n        <div className=\"EndpointPageFooter\">\r\n          <button className=\"EndpointPageSubmitBtn\" disabled={!selectedListings.length}>\r\n            {\r\n              selectedListings.length?\r\n              `Add the ${selectedListings.length} jobs you have selected to database`:\r\n              'You can\\'t submit zero of something.' \r\n            }\r\n            \r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EndpointPage;\r\n","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://js-jr-dev-board.herokuapp.com/api/v1/jobs'\r\n});\r\nexport default instance;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\n\r\nconst jobState = {\r\nJobs: []\r\n};\r\n\r\nconst DashboardCard = () => {\r\n\r\n  const [job, setJob] = useState(jobState);\r\n\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`/`, {})\r\n      .then((res) => {\r\n        const data = res.data;\r\n        setJob(data)\r\n        // console.log(setJob);\r\n      })\r\n      .catch((err) => {\r\n        debugger;\r\n      });\r\n  }, []);\r\n\r\n\r\n  return (\r\n  \r\n  <div className=\"dashboardCard\">\r\n          <div>\r\n            {Object.keys(job).map((key) => {\r\n              return (\r\n                <div key={key}>\r\n                  {job[key].map((jobs, i) => {\r\n                    return (\r\n                      <div className=\"card\" key={i}>\r\n                        <div key={jobs.id}>\r\n                      \r\n                          <h2>{jobs.companyName}</h2>\r\n                          <div>\r\n                            <div>\r\n                              <h3> <span>{jobs.position}</span></h3>\r\n                            </div>\r\n                            <div>\r\n                              <h4>Salary: <span>{jobs.salary}</span></h4>\r\n                            </div>\r\n                            <div>\r\n                              <h4> Location: <span>{jobs.location}</span></h4>\r\n                            </div>\r\n                            <h4>Job Description:</h4>\r\n                            <p>{jobs.description}</p>\r\n                          </div>\r\n                          <div className=\"JobCardApply\">\r\n                            \r\n                          <button href={jobs.applyUrl} target=\"_blank\"> apply-link</button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n  \r\n  )\r\n  \r\n};\r\n\r\nexport default DashboardCard;\r\n","import React from \"react\";\r\nimport DashboardCard from \"./DashboardCard\";\r\n\r\nconst Dashboard = () => {\r\n\r\n  return (\r\n\r\n    <div className=\"dashboard\">\r\n\r\n      <h2>Admin Dashboard</h2>\r\n\r\n      <DashboardCard />\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { Route, NavLink, Switch } from \"react-router-dom\";\r\n\r\nimport Signin from \"./components/Signin/Signin\";\r\nimport \"./App.css\";\r\nimport Profile from \"./components/Profile\";\r\nimport EndpointPage from \"./components/EndpointPage/EndpointPage\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard/Dashboard\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Welcome to the Central Nervous System</h1>\r\n      <nav>\r\n        <NavLink to=\"/\">Home</NavLink>\r\n        <NavLink to=\"/signin\">Sign In</NavLink>\r\n        <NavLink to=\"/endpointPage\">Endpoint Page</NavLink>\r\n      </nav>\r\n      <Profile />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Dashboard} />\r\n        <Route path=\"/signin\" component={Signin} />\r\n        <Route path=\"/endpointPage\" component={EndpointPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\n// const domain = process.env.REACT_APP_AUTH0_DOMAIN;\r\n// const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}